# Modules we still need to use in 2020

# not used from original 05.md from 2019
variable-argument-functions.md

# Put these at the end of the seminar, these are not essential.
opaque-structures.md
flexible-array-member.md
# When bit fields are introduced, use cast-intptr.c as it uses ^
structure-bit-fields.md

# Before using this, add the C99 specification paragraph number that allows
# that.
home-assignments/offsetof.md

# Explain "incomplete type"
Make a module for that, cite C99 when needed.

# On building with a specific C version in mind 
building-with-specific-c-ver.md

# Add a module on when to use size_t and when other integer types.
#
# E.g. https://stackoverflow.com/questions/131803/unsigned-int-vs-size-t
#
# Plus examples on working with file offset (seek, read, write, ...), etc.
The size_t type is the unsigned integer type that is the result of the sizeof
operator (and the offsetof operator), so it is guaranteed to be big enough to
contain the size of the biggest object your system can handle (e.g., a static
array of 8Gb).
